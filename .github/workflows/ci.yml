name: CI
on:
  pull_request:
    branches: [develop, master]
  push:
    branches: [develop, master]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SURGE_LOGIN: ${{ secrets.SURGE_LOGIN }}
      SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}
    steps:
      - name: Checkout source code under repository
        uses: actions/checkout@v2
      - name: Use nodeJS
        uses: actions/setup-node@v1
        with:
          node-version: "16.x"
      - name: Cache node_modules
        uses: actions/cache@v1
        with:
          # path to directories that store cached dependencies
          path: ~/.npm
          # a key for restoring and saving the cache
          # Our NPM dependencies are saved in package-lock file -> if anything in this file changes, it means that some dependency has changed -> new cache need to be generated using "hashFiles" function
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          # an extra key that GitHub use to search for caches at if it did not find any caches using this main "key". For example, when there is any changes in dependencies management file, cache application detect it and create new cache key, so the previous cache can't be restored -> in this case, cache application uses restore-keys to restore the old caches, update dependencies based on newly updated file and stores them with new cache key.
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: npm ci
      - name: Check code formatting
        run: npm run format:check
      - name: Run test
        run: npm run test -- --coverage
        env:
          CI: true
      - name: Upload test coverage as an artifact
        # upload artifacts that created by workflow allows us to share data between jobs or store data once a workflow is complete
        uses: actions/upload-artifact@v1
        with:
          # artifact's name
          name: code-coverage
          # path to the folder/file which we want to upload as an artifact
          path: ./coverage
      - name: Build project
        if: github.event_name == 'push'
        run: npm run build
      - name: Upload delivery package as an artifact
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v1
        with:
          name: delivery-package
          path: ./build
      # - name: Download artifacts
      # download artifacts actions allows us to download artifacts which created by own workflow
      # uses: actions/download-artifact@v1
      # with:
      #   name: code-coverage
      - name: ZIP assets
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: |
          zip -r build.zip ./build
          zip -r coverage.zip ./coverage
      - name: Create a Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Install surge
        if: github.event_name == 'push'
        run: npm install -g surge
      - name: Deploy to Staging
        if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
        run: surge --project ./build --domain enormous-sugar.surge.sh/
      - name: Deploy to Production
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: surge --project ./build --domain juvenile-donkey.surge.sh/
